1. 전역 스코프 : 어디서나 재정의가 가능
--> 점근은 쉬움

= 사용은 쉽지만 동작 결과를 예측하기 어렵다 
==> 따라서, 블럭 스코프, 함수 스코프를 많이 사용해야 한다.
---> 여기서 블럭 스코프와 함수 스코프는 지역 스코프 

2. 전역 객체 vs 지역 객체
전역 객체 : 윈도우 객체(document, querySelector 등)
=> 함수 공간이든, 블럭 공간이든 어디서나 접근 가능

==> 플랫폼 
: 가지고 있는 객체의 환경이 다르다
1) 브라우저 환경 : window
2) Node.JS 환경 : global

3. 호이스팅 
호이스팅이 일어나는 이유 : 선언이 끌어올려진다.
---> 최대한 var를 쓰지 않는것이 좋다. 
(const와 let을 사용하기 !)
= 원래는 오류지만, var는 그냥 실행됨.

4. IIFE : 즉시 실행 함수 표현 
- 즉각적으로 실행되는 함수 구분 
-> 함수를 괄호안에 넣고 바로 실행시켜줌
= 블럭 스코프를 흉내낸 새로운 스코프를 만들어 냄

예) (function() {   ----------> IIFE 시작
                    ----------> IIFE 내부 동작 코드
})()                ----------> IIFE 종료 

==> 다른 즉시 실행함수와 붙는 경우가 있어서 다른 함수와 구분 하기 위해서 ;를 써줘야 한다.
----> 끝에 붙는 ()을 이용해서 매개변수를 넣어줌
: 외부에서 접근이 안되기 때문에 숨겨진 함수를 넣을 때 좋다.
Closer를 쓸때 좋다.



