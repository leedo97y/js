실행 컨텍스트

1. 어렵다
2. 오래된 자료

: 자바스크립트가 실행되는 방식을 담고 있는 핵심 원리
= 자바스크립트 엔진이 코드를 읽고 실행에 필요한 정보를 모아놓은것
---> 종류에 따라 / 단계에 따라 구분을 해놓음

<실행 컨텍스트의 종류>
Global(전역) 
: 전역 공간 this가 바인딩 되는 값을 가짐 / 선언 / Object

Function(함수) 
: 상위 컨텍스트에 접근 가능 / this / 매개변수 / arguments

<실행 컨텍스트의 단계>
Creation Phase = 생성단계
: JS 엔진이 함수를 호출했지만 실행이 시작되지 않은 단계

Execution Phase = 실행단계
: 전역 변수의 값 할당이 발생하며 코드를 실행하는 단계

===> 호이스팅도 나뉘면서 발생

코드예시)

let name  = 'zero';

function first() {
  console.log(this.name);
  console.log(name);
}
=====> 생성단계

1. 전역 객체 생성
2. 변수 생성
3. 변수는 undefined 로 초기화 (호이스팅이 이렇게 일어남)
4. first 함수는 메모리에 위치



let name  = 'zero';

function second() {
  console.log('두번째');
}

function first() {
  second()
  console.log(this.name);
  console.log(name);
}

first()

=====> 실행단계

1. 함수 호출시 함수 실행 컨텍스트 생성
2. arguments 접근 가능
3. GEC에서 생성된 환경에 접근 가능
4. 만약 함수가 다른 함수 호출시 새로운 함수의 실행 컨텍스트 생성되며 반복



+ 이렇게 되면 second 함수던 first 함수던 모두 전역 컨텍스트에 접근 가능하고, 
second 함수는 상위 컨텍스트인 first 함수에 접근이 가능하다. (스코프 일어나서)